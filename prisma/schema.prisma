// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Table {
  id          String      @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  fields      FieldMeta[] @relation("table")

  config Json?
}

model FieldMeta {
  id           String  @id @default(auto()) @map("_id") @db.ObjectId
  name         String  @unique
  inputType    String
  dataType     String
  isSearchable Boolean @default(false)
  isSortable   Boolean @default(false)

  fields FieldValue[]

  fieldCreate FieldCreate?
  fieldUpdate FieldUpdate?
  fieldDelete FieldDelete?

  fieldFind FieldFind?

  Table   Table  @relation("table", fields: [tableId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  tableId String @db.ObjectId
}

model FieldCreate {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  isUI        Boolean   @default(false)
  isRequired  Boolean   @default(false)
  isAuth      Boolean   @default(false)
  authRoles   String[]
  isUnique    Boolean   @default(false)
  fieldMetaId String    @unique @db.ObjectId
  fieldCreate FieldMeta @relation(fields: [fieldMetaId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  defaultValue String
}

model FieldUpdate {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  isUI       Boolean  @default(false)
  isRequired Boolean  @default(false)
  isAuth     Boolean  @default(false)
  authRoles  String[]
  isUnique   Boolean  @default(false)

  fieldMetaId String    @unique @db.ObjectId
  fieldUpdate FieldMeta @relation(fields: [fieldMetaId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model FieldDelete {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  isUI        Boolean   @default(false)
  isAuth      Boolean   @default(false)
  authRoles   String[]
  fieldMetaId String    @unique @db.ObjectId
  fieldDelete FieldMeta @relation(fields: [fieldMetaId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

// backend model
model FieldFind {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  canFindMany     Boolean  @default(false)
  canFindOne      Boolean  @default(false)
  canFindOnUpdate Boolean  @default(false)
  canFindOnList   Boolean  @default(false)
  isAuth          Boolean  @default(false)
  authRoles       String[]

  fieldMetaId String    @unique @db.ObjectId
  fieldFind   FieldMeta @relation(fields: [fieldMetaId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model FieldValue {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  FieldMeta   FieldMeta? @relation(fields: [fieldMetaId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  fieldMetaId String?    @db.ObjectId

  value String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
